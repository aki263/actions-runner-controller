apiVersion: actions.summerwind.dev/v1alpha1
kind: RunnerDeployment
metadata:
  name: tenki-standard-autoscale-aki-213161010
  namespace: tenki-68130006
  annotations:
    tenki/environment: staging
    tenki/installationId: "68130006"
    tenki/offeringId: 0197010e-1aed-7458-be4e-5446634f56ae
    tenki/repositoryId: "213161010"
    tenki/workspaceId: 0197010e-1a98-7ebb-a4b7-134dec5d4800
spec:
  replicas: 2
  template:
    metadata:
      annotations:
        tenki/environment: staging
        tenki/installationId: "68130006"
        tenki/offeringId: 0197010e-1aed-7458-be4e-5446634f56ae
        tenki/repositoryId: "213161010"
        tenki/workspaceId: 0197010e-1a98-7ebb-a4b7-134dec5d4800
      labels:
        tenki: runner
    spec:
      organization: aakash-test-workflow
      labels:
      - tenki-standard-autoscale-aki
      
      group: Default
      
      ephemeral: true
      
      githubAPICredentialsFrom:
        secretRef:
          name: github-app-runner-secret
      
      runtime:
        type: firecracker
        firecracker:
          memoryMiB: 16384        # 16Gi = 16384 MiB
          vcpus: 4                # Match your CPU limits
          
          snapshotName: "tenki-runner-v1"
          
          # rootfsImagePath: "tenki-runner-ubuntu-22.04.ext4"  # Will look in /opt/firecracker/images/
 
          
          kernelImagePath: "/opt/firecracker/kernels/vmlinux-6.1.128-ubuntu24"
          
          # üåê Bridge Networking (using your existing br0 bridge)
          networkConfig:
            networkMode: "bridge"      # Use bridge networking
            bridgeName: "br0"          # Your existing bridge
            dhcpEnabled: true          # Get IP from your network DHCP
            interface: "eth0"          # Interface name inside VM
          
          # useHostBridge: true        # This also uses br0 with DHCP/ An alternative to bridge networking
          
          # VM Behavior
          ephemeralMode: true          # Destroy VM after job completion (matches your ephemeral: true)
          arcMode: true               # Enable ARC integration for status reporting
          arcControllerURL: "http://tenki-staging-runner-2:30080"  # Use your specific node
          
          # Optional: Docker mode if you need container-like behavior
          # dockerMode: false
      
      nodeSelector:
        kubernetes.io/hostname: tenki-staging-runner-2
      
      imagePullSecrets:
      - name: tenki-regcred
      
      # tolerations:
      # - key: "firecracker"
      #   operator: "Equal"
      #   value: "true"
      #   effect: "NoSchedule"
      
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - tenki-staging-runner-2 
---
apiVersion: v1
kind: Service
metadata:
  name: arc-firecracker-controller
  namespace: actions-runner-system
spec:
  type: NodePort
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    nodePort: 30080
    protocol: TCP
  - name: firecracker-api
    port: 8081
    targetPort: 8081
    nodePort: 30081
    protocol: TCP                