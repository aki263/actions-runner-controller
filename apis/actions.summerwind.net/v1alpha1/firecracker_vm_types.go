package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// FirecrackerVMSpec defines the desired state of FirecrackerVM
type FirecrackerVMSpec struct {
	// RunnerSpec contains the runner configuration
	RunnerSpec RunnerConfig `json:"runnerSpec,omitempty"`

	// RootfsPath is the hardcoded path to the rootfs image
	RootfsPath string `json:"rootfsPath,omitempty"`

	// KernelPath is the path to the kernel image
	KernelPath string `json:"kernelPath,omitempty"`

	// Memory allocation for the VM in MiB
	MemoryMiB int `json:"memoryMiB,omitempty"`

	// Number of vCPUs for the VM
	VCPUs int `json:"vcpus,omitempty"`

	// CloudInitData contains the cloud-init configuration
	CloudInitData string `json:"cloudInitData,omitempty"`

	// NetworkConfig for the VM
	NetworkConfig FirecrackerNetworkConfig `json:"networkConfig,omitempty"`
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirecrackerVMSpec) DeepCopyInto(out *FirecrackerVMSpec) {
	*out = *in
	in.RunnerSpec.DeepCopyInto(&out.RunnerSpec)
	out.NetworkConfig = in.NetworkConfig
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirecrackerVMSpec.
func (in *FirecrackerVMSpec) DeepCopy() *FirecrackerVMSpec {
	if in == nil {
		return nil
	}
	out := new(FirecrackerVMSpec)
	in.DeepCopyInto(out)
	return out
}

// FirecrackerNetworkConfig defines networking for the VM
type FirecrackerNetworkConfig struct {
	// Interface name for the VM
	Interface string `json:"interface,omitempty"`

	// Subnet CIDR for the VM network
	SubnetCIDR string `json:"subnetCIDR,omitempty"`

	// Gateway IP address
	Gateway string `json:"gateway,omitempty"`

	// IP address for the VM
	IPAddress string `json:"ipAddress,omitempty"`
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirecrackerNetworkConfig) DeepCopyInto(out *FirecrackerNetworkConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirecrackerNetworkConfig.
func (in *FirecrackerNetworkConfig) DeepCopy() *FirecrackerNetworkConfig {
	if in == nil {
		return nil
	}
	out := new(FirecrackerNetworkConfig)
	in.DeepCopyInto(out)
	return out
}

// FirecrackerVMStatus defines the observed state of FirecrackerVM
type FirecrackerVMStatus struct {
	// Phase represents the current phase of the VM
	Phase FirecrackerVMPhase `json:"phase,omitempty"`

	// Message provides additional information about the current state
	Message string `json:"message,omitempty"`

	// Ready indicates if the VM is ready to accept runners
	Ready bool `json:"ready,omitempty"`

	// IPAddress assigned to the VM
	IPAddress string `json:"ipAddress,omitempty"`

	// StartedAt is the timestamp when the VM was started
	StartedAt *metav1.Time `json:"startedAt,omitempty"`

	// Registration contains runner registration status (same as Runner)
	Registration RunnerStatusRegistration `json:"registration,omitempty"`
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirecrackerVMStatus) DeepCopyInto(out *FirecrackerVMStatus) {
	*out = *in
	if in.StartedAt != nil {
		in, out := &in.StartedAt, &out.StartedAt
		*out = (*in).DeepCopy()
	}
	in.Registration.DeepCopyInto(&out.Registration)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirecrackerVMStatus.
func (in *FirecrackerVMStatus) DeepCopy() *FirecrackerVMStatus {
	if in == nil {
		return nil
	}
	out := new(FirecrackerVMStatus)
	in.DeepCopyInto(out)
	return out
}

// FirecrackerVMPhase represents the phase of a Firecracker VM
type FirecrackerVMPhase string

const (
	// FirecrackerVMPhasePending VM is being created
	FirecrackerVMPhasePending FirecrackerVMPhase = "Pending"

	// FirecrackerVMPhaseStarting VM is starting up
	FirecrackerVMPhaseStarting FirecrackerVMPhase = "Starting"

	// FirecrackerVMPhaseRunning VM is running
	FirecrackerVMPhaseRunning FirecrackerVMPhase = "Running"

	// FirecrackerVMPhaseReady VM is ready and runner is registered
	FirecrackerVMPhaseReady FirecrackerVMPhase = "Ready"

	// FirecrackerVMPhaseStopping VM is stopping
	FirecrackerVMPhaseStopping FirecrackerVMPhase = "Stopping"

	// FirecrackerVMPhaseFailed VM failed to start or run
	FirecrackerVMPhaseFailed FirecrackerVMPhase = "Failed"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:JSONPath=".status.phase",name=Phase,type=string
// +kubebuilder:printcolumn:JSONPath=".status.ipAddress",name=IP,type=string
// +kubebuilder:printcolumn:JSONPath=".status.ready",name=Ready,type=boolean
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"

// FirecrackerVM is the Schema for the firecrackervm API
type FirecrackerVM struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   FirecrackerVMSpec   `json:"spec,omitempty"`
	Status FirecrackerVMStatus `json:"status,omitempty"`
}

// DeepCopyObject returns a generically typed copy of an object
func (in *FirecrackerVM) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirecrackerVM.
func (in *FirecrackerVM) DeepCopy() *FirecrackerVM {
	if in == nil {
		return nil
	}
	out := new(FirecrackerVM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirecrackerVM) DeepCopyInto(out *FirecrackerVM) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// +kubebuilder:object:root=true

// FirecrackerVMList contains a list of FirecrackerVM
type FirecrackerVMList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FirecrackerVM `json:"items"`
}

// DeepCopyObject returns a generically typed copy of an object
func (in *FirecrackerVMList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirecrackerVMList.
func (in *FirecrackerVMList) DeepCopy() *FirecrackerVMList {
	if in == nil {
		return nil
	}
	out := new(FirecrackerVMList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirecrackerVMList) DeepCopyInto(out *FirecrackerVMList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FirecrackerVM, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

func init() {
	SchemeBuilder.Register(&FirecrackerVM{}, &FirecrackerVMList{})
}
